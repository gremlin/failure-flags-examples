# Copyright Istio Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

##################################################################################################
# This file defines the services, service accounts, and deployments for the Bookinfo sample.
#
# To apply all 4 Bookinfo services, their corresponding service accounts, and deployments:
#
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml
#
# Alternatively, you can deploy any resource separately:
#
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -l service=reviews # reviews Service
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -l account=reviews # reviews ServiceAccount
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -l app=reviews,version=v3 # reviews-v3 Deployment
##################################################################################################

##################################################################################################
# Internal Proxy
##################################################################################################
---
apiVersion: v1
kind: Service
metadata:
  name: internal-proxy 
  labels:
    app: internal-proxy
    service: internal-proxy
spec:
  ports:
  - port: 8888
    targetPort: 8888
    name: http
  selector:
    app: internal-proxy
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-internal-proxy
  labels:
    account: internal-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: internal-proxy
  labels:
    app: internal-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: internal-proxy
  template:
    metadata:
      labels:
        app: internal-proxy
    spec:
      serviceAccountName: bookinfo-internal-proxy
      containers:
      - name: tinyproxy
        image: docker.io/monokal/tinyproxy:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8888
        args: ["ANY"]
---
##################################################################################################
# Details service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: details
  labels:
    app: details
    service: details
spec:
  ports:
  - port: 9080
    targetPort: 9081
    name: http
  selector:
    app: details
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-details
  labels:
    account: details
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: details-v1
  labels:
    app: details
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: details
      version: v1
  template:
    metadata:
      labels:
        app: details
        version: v1
    spec:
      serviceAccountName: bookinfo-details
      volumes:
      - name: gremlin-secret
        secret:
          secretName: example-gremlin-secret
      containers:
      - name: gremlin
        image: docker.io/gremlin/failure-flags-sidecar:v2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9081
        volumeMounts:
        - name: gremlin-secret
          readOnly: true
          mountPath: "/etc/gremlin-secret"
        env:
          - name: GREMLIN_SIDECAR_ENABLED
            value: "true" 
          - name: GREMLIN_CONFIG_FILE
            value: "/etc/gremlin-secret/example-config.yaml" # must match the volume mount above
          - name: SERVICE_NAME
            value: "details-v1"
          - name: GREMLIN_DEBUG
            value: "true"
          - name: HTTP_PROXY
            value: http://internal-proxy:8888
      - name: details
        image: docker.io/istio/examples-bookinfo-details-v1:1.20.3
        imagePullPolicy: IfNotPresent
        env:
          - name: HTTP_PROXY
            value: http://localhost:5034/
        ports:
        - containerPort: 9080
---
##################################################################################################
# Ratings service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: ratings
  labels:
    app: ratings
    service: ratings
spec:
  ports:
  - port: 9080
    targetPort: 9081
    name: http
  selector:
    app: ratings
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-ratings
  labels:
    account: ratings
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings-v1
  labels:
    app: ratings
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings
      version: v1
  template:
    metadata:
      labels:
        app: ratings
        version: v1
    spec:
      serviceAccountName: bookinfo-ratings
      volumes:
      - name: gremlin-secret
        secret:
          secretName: example-gremlin-secret
      containers:
      - name: gremlin
        image: docker.io/gremlin/failure-flags-sidecar:v2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9081
        volumeMounts:
        - name: gremlin-secret
          readOnly: true
          mountPath: "/etc/gremlin-secret"
        env:
          - name: GREMLIN_SIDECAR_ENABLED
            value: "true" 
          - name: GREMLIN_CONFIG_FILE
            value: "/etc/gremlin-secret/example-config.yaml" # must match the volume mount above
          - name: SERVICE_NAME
            value: "ratings"
          - name: GREMLIN_DEBUG
            value: "true"
          - name: HTTP_PROXY
            value: http://internal-proxy:8888
      - name: ratings
        image: docker.io/istio/examples-bookinfo-ratings-v1:1.20.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
        env:
          - name: HTTP_PROXY
            value: http://localhost:5034/
---
##################################################################################################
# Reviews service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: reviews
  labels:
    app: reviews
    service: reviews
spec:
  ports:
  - port: 9080
    targetPort: 9081
    name: http
  selector:
    app: reviews
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-reviews
  labels:
    account: reviews
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v1
  labels:
    app: reviews
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v1
  template:
    metadata:
      labels:
        app: reviews
        version: v1
    spec:
      serviceAccountName: bookinfo-reviews
      volumes:
      - name: gremlin-secret
        secret:
          secretName: example-gremlin-secret
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      containers:
      - name: gremlin
        image: docker.io/gremlin/failure-flags-sidecar:v2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9081
        volumeMounts:
        - name: gremlin-secret
          readOnly: true
          mountPath: "/etc/gremlin-secret"
        env:
          - name: GREMLIN_SIDECAR_ENABLED
            value: "true" 
          - name: GREMLIN_CONFIG_FILE
            value: "/etc/gremlin-secret/example-config.yaml" # must match the volume mount above
          - name: SERVICE_NAME
            value: "reviews-v1"
          - name: GREMLIN_DEBUG
            value: "true"
          - name: HTTP_PROXY
            value: http://internal-proxy:8888
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v1:1.20.3
        imagePullPolicy: IfNotPresent
        env:
        - name: HTTP_PROXY
          value: http://localhost:5034/
        - name: LOG_DIR
          value: "/tmp/logs"
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v2
  labels:
    app: reviews
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v2
  template:
    metadata:
      labels:
        app: reviews
        version: v2
    spec:
      serviceAccountName: bookinfo-reviews
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: gremlin-secret
        secret:
          secretName: example-gremlin-secret
      containers:
      - name: gremlin
        image: docker.io/gremlin/failure-flags-sidecar:v2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9081
        volumeMounts:
        - name: gremlin-secret
          readOnly: true
          mountPath: "/etc/gremlin-secret"
        env:
          - name: GREMLIN_SIDECAR_ENABLED
            value: "true" 
          - name: GREMLIN_CONFIG_FILE
            value: "/etc/gremlin-secret/example-config.yaml" # must match the volume mount above
          - name: SERVICE_NAME
            value: "reviews-v2"
          - name: GREMLIN_DEBUG
            value: "true"
          - name: HTTP_PROXY
            value: http://internal-proxy:8888
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v2:1.20.3
        imagePullPolicy: IfNotPresent
        env:
        - name: HTTP_PROXY
          value: http://localhost:5034/
        - name: LOG_DIR
          value: "/tmp/logs"
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v3
  labels:
    app: reviews
    version: v3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v3
  template:
    metadata:
      labels:
        app: reviews
        version: v3
    spec:
      serviceAccountName: bookinfo-reviews
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: gremlin-secret
        secret:
          secretName: example-gremlin-secret
      containers:
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v3:1.20.3
        imagePullPolicy: IfNotPresent
        env:
        - name: HTTP_PROXY
          value: http://localhost:5034/
        - name: LOG_DIR
          value: "/tmp/logs"
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
      - name: gremlin
        image: docker.io/gremlin/failure-flags-sidecar:v2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9081
        volumeMounts:
        - name: gremlin-secret
          readOnly: true
          mountPath: "/etc/gremlin-secret"
        env:
          - name: GREMLIN_SIDECAR_ENABLED
            value: "true" 
          - name: GREMLIN_CONFIG_FILE
            value: "/etc/gremlin-secret/example-config.yaml" # must match the volume mount above
          - name: SERVICE_NAME
            value: "reviews-v3"
          - name: GREMLIN_DEBUG
            value: "true"
          - name: HTTP_PROXY
            value: http://internal-proxy:8888
---
##################################################################################################
# Productpage services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: productpage
  labels:
    app: productpage
    service: productpage
spec:
  ports:
  - port: 9080
    targetPort: 9081
    name: http
  selector:
    app: productpage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-productpage
  labels:
    account: productpage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productpage-v1
  labels:
    app: productpage
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productpage
      version: v1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9080"
        prometheus.io/path: "/metrics"
      labels:
        app: productpage
        version: v1
    spec:
      serviceAccountName: bookinfo-productpage
      volumes:
      - name: tmp
        emptyDir: {}
      - name: gremlin-secret
        secret:
          secretName: example-gremlin-secret
      containers:
      - name: productpage
        image: docker.io/istio/examples-bookinfo-productpage-v1:1.20.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        env:
        - name: HTTP_PROXY
          value: http://localhost:5034/
      - name: gremlin
        image: docker.io/gremlin/failure-flags-sidecar:v2
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "32Mi"
            cpu: "250m"
          limits:
            memory: "32Mi"
            cpu: "500m"
        ports:
        - containerPort: 9081
        volumeMounts:
        - name: gremlin-secret
          readOnly: true
          mountPath: "/etc/gremlin-secret"
        env:
          - name: GREMLIN_SIDECAR_ENABLED
            value: "true" 
          - name: GREMLIN_CONFIG_FILE
            value: "/etc/gremlin-secret/example-config.yaml" # must match the volume mount above
          - name: SERVICE_NAME
            value: "productpage"
          - name: GREMLIN_DEBUG
            value: "true"
          - name: GREMLIN_TRACE
            value: "false"
          - name: GREMLIN_REFRESH_INTERVAL
            value: "1m"
          - name: "HTTP_PROXY"
            value: "http://internal-proxy:8888"
---
